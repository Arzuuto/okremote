// Code generated by entc, DO NOT EDIT.

package advertisement

const (
	// Label holds the string label denoting the advertisement type in the database.
	Label = "advertisement"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldContrat holds the string denoting the contrat field in the database.
	FieldContrat = "contrat"
	// FieldEntreprise holds the string denoting the entreprise field in the database.
	FieldEntreprise = "entreprise"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// FieldLocalisation holds the string denoting the localisation field in the database.
	FieldLocalisation = "localisation"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldRemuneration holds the string denoting the remuneration field in the database.
	FieldRemuneration = "remuneration"
	// FieldSector holds the string denoting the sector field in the database.
	FieldSector = "sector"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// Table holds the table name of the advertisement in the database.
	Table = "advertisements"
	// UsersTable is the table that holds the users relation/edge.
	UsersTable = "advertisements"
	// UsersInverseTable is the table name for the Users entity.
	// It exists in this package in order to avoid circular dependency with the "users" package.
	UsersInverseTable = "users"
	// UsersColumn is the table column denoting the users relation/edge.
	UsersColumn = "users_advertisement"
)

// Columns holds all SQL columns for advertisement fields.
var Columns = []string{
	FieldID,
	FieldDate,
	FieldContrat,
	FieldEntreprise,
	FieldImage,
	FieldLocalisation,
	FieldName,
	FieldRemuneration,
	FieldSector,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "advertisements"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"users_advertisement",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
