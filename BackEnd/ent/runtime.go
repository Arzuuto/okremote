// Code generated by entc, DO NOT EDIT.

package ent

import (
	"Backend/ent/schema"
	"Backend/ent/users"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	usersFields := schema.Users{}.Fields()
	_ = usersFields
	// usersDescFistName is the schema descriptor for FistName field.
	usersDescFistName := usersFields[0].Descriptor()
	// users.FistNameValidator is a validator for the "FistName" field. It is called by the builders before save.
	users.FistNameValidator = usersDescFistName.Validators[0].(func(string) error)
	// usersDescLastName is the schema descriptor for LastName field.
	usersDescLastName := usersFields[1].Descriptor()
	// users.LastNameValidator is a validator for the "LastName" field. It is called by the builders before save.
	users.LastNameValidator = usersDescLastName.Validators[0].(func(string) error)
	// usersDescEmail is the schema descriptor for Email field.
	usersDescEmail := usersFields[2].Descriptor()
	// users.EmailValidator is a validator for the "Email" field. It is called by the builders before save.
	users.EmailValidator = usersDescEmail.Validators[0].(func(string) error)
	// usersDescPassword is the schema descriptor for Password field.
	usersDescPassword := usersFields[3].Descriptor()
	// users.PasswordValidator is a validator for the "Password" field. It is called by the builders before save.
	users.PasswordValidator = usersDescPassword.Validators[0].(func(string) error)
}
